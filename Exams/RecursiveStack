import java.util.NoSuchElementException;                      //C'est pas mon code et il ne provient pas du github epl donc Ã©viter de le partager svp.

/**
 * Question:
 *
 * You are asked to implement the abstract data type RecursiveStack below.
 *
 * Your implementation can be an inner static class or a class below.
 * The factory method "makeRecursiveStack" returns a new instance of your implementation
 *
 * Once it is done, copy-paste the complete file in Inginious also with the imports
 *
 *
 * Feel free to add classes, methods or fields in the class but do not modify
 * the signature of existing code
 *
 */


public interface RecursiveStack {

    /**
     * Factory method
     * @return a new instance of your implementation of RecursiveStack
     */
    public static RecursiveStack makeRecursiveStack() {
        return new MyStack();
    }

    int size();
    int top();
    RecursiveStack removeTop();
    RecursiveStack addTop(int v);

    // TODO implement an (inner) class that implements the interface
    class MyStack implements RecursiveStack {

        MyStack next = null;
        Integer value = null;

        MyStack() {}

        public MyStack(int v , MyStack next){
            this.value = v;
            this.next = next;
        }

        @Override
        public int size() {
            if (this.value == null){
                return 0;
            }
            if (this.next.value == null){
                return 1;
            }
            return this.next.size()+1;
        }

        @Override
        public int top() throws NoSuchElementException {
            if (this.value == null){
                throw new NoSuchElementException();
            }
            return this.value;
        }

        @Override
        public RecursiveStack removeTop() {
            return this.next;
        }

        @Override
        public RecursiveStack addTop(int v) {
            return new MyStack(v , this);
        }
    }

}
