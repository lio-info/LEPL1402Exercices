public class FindPattern {

    /**
     * In this task you must find the first occurrence of a pattern in a
     * sequence.
     * This occurrence might also be **in a different order** than in
     * the pattern.
     *
     * For example, let:
     *      pattern = [1, 1, 3, 5]
     *      sequence = [3, 1, 2, 5, 1, 3, 1, 5, 1]
     *
     * Starting at index 3, we have the sub-sequence [5, 1, 3, 1] which
     * is the pattern reordered. Thus your method must return 3.
     * Note that the pattern also appears at index 4, but you must
     * return the first occurrence.
     * If the pattern is not in the sequence, you must return -1.
     *
     * @param pattern The pattern to look for
     * @param sequence The sequence to look in. Each element of the sequence is
     *        in the interval [0, 15]
     * @return The index of the first occurrence of the pattern in the
     *         sequence or -1 if the pattern is not in the sequence
     */
    public static int find(int [] pattern, int [] sequence) {
        int[] copy = new int[pattern.length];
        for (int d=0 ; d < copy.length ; d++){
            copy[d] = pattern[d];
        }

        for (int i=0 ; i < sequence.length ; i++){
            int ctr = 0;
            while (contains(pattern , sequence[i+ctr])){
                pattern[index(pattern , sequence[i+ctr])] = 34896;
                ctr ++;
                if (i+ctr == sequence.length){
                    break;
                }
            }
            if (ctr == pattern.length){
                return i;
            }
            for (int c=0 ; c < copy.length ; c++){
                pattern[c] = copy[c];
            }
            System.out.println(java.util.Arrays.toString(pattern));
        }

        return -1;
    }

    public static int index(int [] pattern , int elem){
        for (int n=0 ; n < pattern.length ; n++){
            if (pattern[n] == elem){
                return n;
            }
        }
        return 0;
    }

    public static boolean contains(int [] pattern , int elem){
        for (int i=0 ; i < pattern.length ; i++){
            if (pattern[i] == elem){
                return true;
            }
        }
        return false;
    }

    public static void main(String[] args) {
        int[] a = {1, 2, 3};
        int[] b = {4, 3, 2, 3, 1};
        System.out.println(find(a , b));
    }
}
